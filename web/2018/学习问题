vue-cli起的webpack项目 ip 不可以访问

  在 config 里面的
     index.js 里面的
     module.exports 下面的
     dev 下面的
     host:'localhost' 改为 host:'0.0.0.0'
  
  export default命令
    
    为模块指定默认输出，这样就不需要知道所要加载模块的变量名
  
  无关紧要的错误提示插件 Eslint
    http://blog.csdn.net/walid1992/article/details/54633760
    安装
      npm i eslint
      eslint --init
  
    已安装的可以在文件目录下的 .eslintrc 文件夹中修改错误提示配置

vue-router

  在 app.vue 里加挂载点 

    <router-view></router-view>

  直接用例子 template: '<div></div>' 需要在 webpack 加解析

    resolve: {
      alias: {
        vue: 'vue/dist/vue.js'
      }
    }

vuex

  使用 mapState 辅助函数需要先把 vuex 注册到 vue 里

从浏览器地址栏输入url到显示页面的步骤(以HTTP为例)

  查看是否缓存，缓存是否最新
  没缓存或者不是最新，建立TCP链接发送HTTP请求报文
  根据资源类型决定如何解析
  假如是html 构建dom树 cssom树 执行js脚本
  显示页面

从浏览器打开到页面渲染完成的过程

  浏览器解析->查询缓存->dns查询->建立链接->服务器处理请求->服务器发送响应->客户端收到页面->解析HTML->构建渲染树->开始显示内容(白屏时间)->首屏内容加载完成(首屏时间)->用户可交互(DOMContentLoaded)->加载完成(load)

BOM 和 DOM 是什么？有什么联系？

  BOM 浏览器对象模型 DOM 文档对象模型
  BOM 包含了 DOM 

CSS 如何实现垂直居中？

  1. 普通垂直居中
    height:
    line-height:
  2. 不知道自己高度和父容器高度的情况下绝对定位
    父元素
      position: relative;
    子元素
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
  3. 父元素有高度，且容器下只有一个元素相对定位
    父元素
      height:
    子元素
      position: relative;
      top: 50%;
      transform: translateY(-50%);
  4. Flex布局
    父元素
      display: flex;
      display: -webkit-flex;
      align-items: center; // 指定垂直居中

  行内居中

    text-align:center;

    heighe,line-height;

  绝对居中

    position:absolute;
    left:0; right:0; top:0; bottom:0;

    position:absolute;
    top:50%; left:50%;
    margin-top;margin-left;

  瀑布流实现

    Flex 布局
    justify-content

Script 的 defer 和 async 属性

  async 加载同步进行，完成后中断元素解析执行任务

  defer 加载同步进行，但在元素解析完成后才会执行任务

数组去重

  indexOf 方法

    返回在数组中可以找到一个给定元素的第一个索引，如果不存在，则返回-1。

    function unique(arr){
     var res = [];
     for(var i=0; i<arr.length; i++){
      if(res.indexOf(arr[i]) == -1){
       res.push(arr[i]);
      }
     }
     return res;
    }

  new Set 方法

    function unique10(arr){
     //Set数据结构，它类似于数组，其成员的值都是唯一的
     return Array.from(new Set(arr)); // 利用Array.from将Set结构转换成数组
    }

Ajax

  Ajax 默认是同步还是异步？
  
    默认 async:true 异步
  
  Ajax 中什么时候用同步，什么时候用异步？
  
    在函数里发送一个 Ajax 使用异步请求的时候，未将结果交由另一个函数处理的话，会发生异步未执行完，函数已经完成 return 了

  如何设置ajax为同步？

    async:false

this
  
  this的指向不是在创建时就决定了，而是由执行环境决定的。

    全局对象 指向 window 对象

    对象环境 指向 当前对象

    构造函数环境 指向 创建出来的对象

    事件对象 指向 dom 事件

  修改 this 的指向

    局部变量来代替 this 指针

      var _this = this;//使用一个变量指向 this

    使用 call、apply、bind 方法

      函数.call(this, arg1, arg2, arg3, arg4)
      
        第一个参数用来指定函数内部的this指向，后面的参数是函数执行时所需的实参

        function add(a, b) {
          console.log(this.length + a + b);
        }
        add.call([1, 2, 3], 10, 50); // 63

      函数.apply(this, []);
        
        第一个参数用来指定函数内部的this指向
        
        第二个参数要求是一个数组或者伪数组，apply会把它平铺然后传入对应的函数中

        function add(a, b) {
          console.log(this.length + a + b);
        }
        add.apply([1, 2, 3], [10, 50]); // 63

继承与原型链


闭包

  闭包就是能够读取其他函数内部变量的函数

  好处

    可以读取函数内部的变量
    让这些变量的值始终保持在内存中，不会在调用后被自动清除

浅拷贝和深拷贝

  浅拷贝

    意思是复制引用地址，未复制真正的值，会修改到原始对象

  深拷贝

    对目标对象完全复制，不会修改到原始对象

      JSON.stringify/parse 的方法

      递归 的方法

        function deepClone(source){
          // 判断复制的目标是数组还是对象
          const targetObj = source.constructor === Array ? [] : {};

          // 遍历目标
          for(let keys in source){ 

            // 判断对象是否含有指定的属性
            if(source.hasOwnProperty(keys)){

              // 如果值是对象，就递归一下
              if(source[keys] && typeof source[keys] === 'object'){

                targetObj[keys] = source[keys].constructor === Array ? [] : {};
                targetObj[keys] = deepClone(source[keys]);

              } else {

                // 如果不是，就直接赋值
                targetObj[keys] = source[keys];
              }
            }
          }
          return targetObj;
        }

防抖与节流

  都是用来控制某个函数在一定时间内执行多少次的技巧

逗号表达式

  1. 逗号表达式的运算过程为：从左往右逐个计算表达式

  2. 逗号表达式作为一个整体，它的值为最后一个表达式

  3. 逗号运算符的优先级别在所有运算符中最低

SQL

  distinct 唯一
  sum 求和
  avg 求平均

  WITH (NOLOCK)

  创建表
  
    create table StudentInfoTable
    ( id bigint identity(1,1) not null primary key,
    no varchar(50),
    name varchar(50))

jQuery

  $.extend()
    函数用于将一个或多个对象的内容合并到目标对象
  
  append()
    在被选元素内的结尾插入指定内容
  
  data()
    向被选元素附加数据，或者从被选元素获取数据

  offset()
    返回或设置匹配元素相对于文档的偏移

  on('scroll',function)
    滚动条事件

  height()
    返回或设置匹配元素的高度

  children()
    返回被选元素的所有直接子元素

  eq()
    将匹配元素集缩减值指定 index 上的一个

  hasClass()
    检查被选元素是否包含指定的 class

  removeClass()
    从被选元素移除一个或多个类

  addClass()
    向被选元素添加一个或多个类

  animate()
    执行 CSS 属性集的自定义动画

Javascript

  Node.contains()
    表示传入的节点是否为该节点的后代节点

  Element.getBoundingClientRect()
    返回值是一个 DOMRect 对象,包含了一组用于描述边框的只读属性
        left
        top
        right
        bottom

  Element.scrollHeight
    一个元素内容高度，包括由于溢出导致的视图中不可见内容

JS 原生方法

  split()
  
    方法用于把一个字符串分割成字符串数组
  
  reverse()
  
    方法用于颠倒数组中元素的顺序
  
  join()
  
    方法用于把数组中的所有元素一指定的分隔符放入一个字符串
  
  toUpperCase()
  
    方法用于把字符串转换为大写
  
  toString()
  
    方法可把一个逻辑值转换为字符串，并返回结果
  
  charAt()
  
    方法可返回指定位置的字符
  
  slice()
  
    方法可从已有的数组中返回选定的元素

  .trim()

    去前后空格

  .replace(/[\r\n]/g, "")

    去回车换行

  .match(/<\w+>(.*?)<\/\w+>/g)[0]

    正则匹配第一个 html 标签

Laravel

  php artisan serve 启动服务

  php artisan serve --port=8000 --host=0.0.0.0 端口设置、外网访问

一行代码禁止网页的右键和复制功能

  <body ondragstart="window.event.returnValue=false" oncontextmenu="window.event.returnValue=false" onselectstart="event.returnValue=false">

phpStudy

  自定义 403、404 页面

    修改配置

      phpStudy>Apache>conf 下面的 httpd.conf 文件
  
      `-- httpd.conf
        <Directory />
        Options FollowSymLinks
        AllowOverride All
        </Directory>
  
        ErrorDocument 404 /missing.html
      `

    在网站根目录建 .htaccess

      `-- .htaccess
        ErrorDocument 403 /404.html
        ErrorDocument 404 /404.html
      `

    建自定义 404 页面 名字为 404.html

打包错误

  错误

    Chunk.entrypoints: Use Chunks.groupsIterable and filter by instanceof Entrypoint instead

  问题

    插件不是 4.0.0

  解决方法

    npm install --save-dev extract-text-webpack-plugin@next
    会下载到+ extract-text-webpack-plugin@4.0.0-beta.0 

  错误

    Cannot use [chunkhash] or [contenthash] for chunk in '[name].

  问题

    热更新(HMR)不能和[chunkhash]同时使用

  解决方法

    去掉热更新