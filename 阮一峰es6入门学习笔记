
let 命令

  不存在变量提升

  暂时性死区

  不允许重复声明

块级作用域

  ES6 块级作用域 允许任意嵌套

  块级作用域和函数声明

  do 表达式 返回内部最后执行的表达式的值

const 命令

  一旦声明，必须初始化且值不能改变

  性质跟 let 一样

  本质 对象数组本身不可变，内容可变

ES6 声明变量的六种方法

  var

  function

  let

  const

  import

  class

顶层对象的属性

  顶层对象的属性与全局变量挂钩

数组的解构赋值

  从数组和对象中提取值，对变量进行赋值，这被称为解构

  模式匹配

  	只要等号两边的模式相同，左边的变量就会被赋予对应的值

  	如果解构不成功，变量的值就等于undefined

  	等号左边的模式，只匹配一部分的等号右边的数组

  默认值

  	解构赋值允许指定默认值

  	默认值是一个表达式，只有在用到的时候，才会求值

  	默认值可以引用解构赋值的其他变量，但该变量必须已经声明

对象的解构赋值

  解构不仅可以用于数组，还可以用于对象

  对象的属性没有次序，变量必须与属性同名，才能取到正确的值

  也可以用于解构嵌套结构的对象

  对象的解构也可以指定默认值

  	默认值生效的条件是，对象的属性值严格等于undefined

  	如果解构失败，变量的值等于undefined

  	如果解构模式是嵌套的对象，而且子对象所在的父属性不存在，那么将会报错


扩展

  冻结对象

    Object.freez(obj)

  返回对象自身可枚举属性的键值对数组

    Object.entries(obj)

  返回对象的所有可枚举属性的字符串数组

    Object.keys(obj)