
jQuery

	认识 jQuery

		DOM 对象和 jQuery 对象

			DOM（Document Object Model,文档对象模型）

			jQuery 对象就是通过 jQuery 包装 DOM 对象后产生的对象（只有对象为 jQuery 对象,才可以使用 jQuery 里的方法）

			DOM 对象和 jQuery 对象的相互转换

				jQuery 转 DOM

					第一种方法( jQuery对象类似数组的对象,可以用[index]的方法 ):
						var $cs = $('#cs');    // jQuery 对象
						var cs  = $cs[0];      // DOM 对象

					第二种方法( jQuery本身提供 ):
						var $cs = $('#cs');    // jQuery 对象
						var cs  = $cs.get(0);  // DOM 对象

				DOM 转 jQuery

					对于 DOM 对象,只需要用 $() 把 DOM 对象包装起来就可以完成转换
						var cs  = document.getElementById('cs');
						var $cs = $(cs);
	
	选择器

		基本选择器

			#id

			.class

			element( 元素名 )

			* ( 所有元素 )

			selector1,selector2,...selectorN ( 元素集合 )

		层级选择器

			ancestor descendant ( 选取 ancestor 元素里的所有 descendant 后代元素 )

			parent > child ( 选取 parent 元素下的 child 子元素 )

			prev + next ( 选取紧接在 prev 元素后的 next 元素 )

			prev ~ siblings ( 选取 prev 元素之后的所有 siblings 元素 )

		过滤选择器

			基本

				:first ( 选取首个元素 )

				:last ( 选取最后一个元素 )

				:not(selector) ( 去除所有与给定选择器匹配的元素 )

				:even ( 选取索引是偶数的所有元素,索引从 0 开始, 0 也算 )

				:odd ( 选取索引是奇数的所有元素,索引从 0 开始, 0 不算 )

				:eq(index) ( 选取索引等于 index 的元素, index 从 0 开始 )

				:gt(index) ( 选取索引大于 index 的元素, index 从 0 开始 )

				:lt(index) ( 选取索引小于 index 的元素, index 从 0 开始 )

				:header ( 选取所有的标题元素 )

				:animated ( 选取当前正在执行动画的所有元素 )

				:focus ( 选取当前获取焦点的元素 )

			内容

				:contains(text) ( 选取含有文本内容为'text'的元素 )

				:empty ( 选取不包含子元素或者文本的空元素 )

				:has(selector) ( 选取含有选择器所匹配的元素的元素 )

				:parent ( 选取含有子元素或者文本的元素 )

			可见性

				:hidden ( 选取所有不可见的元素 )

				:visible ( 选取所有可见的元素 )

			属性

				[attribute] ( 选取拥有此属性的元素 )

				[attribute=value] ( 值为 value 的元素 )

				[attribute!=value] ( 值不等于 value 的元素 )

				[attribute^=value] ( 以 value 开始的元素 )

				[attribute$=value] ( 以 value 结束的元素 )

				[attribute*=value] ( 含有 value 的元素 )

				[attrSel1][attrSel2][attrSelN] ( 复合属性选择器，需要同时满足多个条件时使用 )

			子元素

				:first-child  ( 选取每个父元素的首个子元素 )

				:last-child  ( 选取每个父元素的最后一个子元素 )

				:nth-child  ( 匹配其父元素下的第N个子或奇偶元素 )

				:only-child  ( 某个元素是父元素中唯一的子元素，那将会被匹配 )

			表单

				:input  ( 匹配所有 input, textarea, select 和 button 元素 )

				:text  ( 匹配所有的单行文本框 )

				:password  ( 匹配所有密码框 )

				:radio  ( 匹配所有单选按钮 )

				:checkbox  ( 匹配所有复选框 )

				:submit  ( 匹配所有提交按钮 )

				:image  ( 匹配所有图像域 )

				:reset  ( 匹配所有重置按钮 )

				:button  ( 匹配所有按钮 )

				:file  ( 匹配所有文件域 )

			表单对象属性

				:enabled  ( 选取所有可用元素 )

				:disabled  ( 选取所有不可用元素 )

				:checked  ( 选取所有被选中的元素 )

				:selected  ( 选取所有被选中的选项元素 )

	DOM 操作

		查找节点

			查找元素节点 利用选择器查找节点

			查找属性节点 可以使用 attr() 方法来获取它的各种属性的值

				attr(name|properties|key,value|fn)

					name 属性名称

					properties 作为属性的“名/值对”对象

					key,value 属性名称，属性值

					key,function(index, attr) 返回属性值的函数,第一个参数为当前元素的索引值，第二个参数为原先的属性值

		创建节点

			创建元素节点、文本节点、属性节点都可以直接写在 $() 里面

				$(html) 方法会根据传入的 HTML 标记字符串，创建一个 DOM 对象，并包装成 jQuery 对象后返回
					无论 $(html) 中的 HTML 代码多么复杂，都可以用相同的方式来创建

		插入节点

			元素内部末尾 append(content|fn)  向每个匹配的元素内部追加内容

			appendTo(content)  把所有匹配的元素追加到另一个指定的元素元素集合中 ( 跟上面方法反向 )

			元素内部前置 prepend(content|fn)  向每个匹配的元素内部前置内容

			prependTo(content)  把所有匹配的元素前置到另一个、指定的元素元素集合中 ( 跟上面方法反向 )

			元素之后 after(content|fn)  在每个匹配的元素之后插入内容

			insertAfter(content)  把所有匹配的元素插入到另一个、指定的元素元素集合的后面 ( 跟上面方法反向 )

			元素之前 before(content|fn)  在每个匹配的元素之前插入内容

			insertBefore(content)  把所有匹配的元素插入到另一个、指定的元素元素集合的前面 ( 跟上面方法反向 )

		删除节点

			remove() 删除元素，不会把元素从jQuery对象中删除，因而可以在将来再使用这些匹配的元素。但除了这个元素本身得以保留之外都会被移除。

			detach() 删除元素，不会把元素从jQuery对象中删除，因而可以在将来再使用这些匹配的元素。所有绑定的事件、附加的数据等都会保留下来。

			empty() 并不是删除节点，而是清空节点，它能清空元素中的所有后代节点

		复制节点

			clone(Even) 克隆匹配的 DOM 元素并且选中这些克隆的副本
				Even 写入 true 时复制元素的同时复制元素中所绑定的事件

		替换节点

			replaceWith() 将所有匹配的元素替换成指定的 HTML 或 DOM 元素

			replaceAll() 用匹配的元素替换掉所有 selector 匹配到的元素

		包裹节点

			wrap() 把所有匹配的元素用其他元素的结构化标记包裹起来

			unwrap() 这个方法将移出元素的父元素。这能快速取消 .wrap()方法的效果。匹配的元素（以及他们的同辈元素）会在DOM结构上替换他们的父元素。

			wrapAll() 将所有匹配的元素用单个元素包裹起来

			wrapInner() 将每一个匹配的元素的子内容(包括文本节点)用一个HTML结构包裹起来

		属性操作

			获取属性、设置属性 attr(name|pro|key,val|fn)  设置或返回被选元素的属性值

				name  属性名称

				properties  作为属性的“名/值对”对象

				key,value  属性名称，属性值

				key,function(index, attr)  返回属性值的函数,第一个参数为当前元素的索引值，第二个参数为原先的属性值

			删除属性 removeAttr(name)  从每一个匹配的元素中删除一个属性

			获取首个属性 prop(name|properties|key,value|fn)  获取在匹配的元素集中的第一个元素的属性值

				name 属性名称

				properties 作为属性的“名/值对”对象

				key,value 属性名称，属性值

				key,function(index, attr) 属性名称 / 返回属性值的函数,第一个参数为当前元素的索引值，第二个参数为原先的属性值。

			删除首个属性 removeProp(name)  用来删除由.prop()方法设置的属性集

		样式操作

			追加样式 addClass 为每个匹配的元素添加指定的类名

			删除样式 removeClass 从所有匹配的元素中删除全部或者指定的类

			切换样式 toggleClass 如果存在（不存在）就删除（添加）一个类

		设置和获取HTML、文本和值

			HTML  html() 读取或者设置某个元素中的 HTML 内容

			文本  text() 读取或者设置某个元素中的文本内容

			值  val() 设置和获取元素的值

		遍历节点

			children() 用于取得匹配元素的子元素集合

			next() 取得匹配元素后面紧邻的同辈元素

			prev() 取得匹配元素前面紧邻的同辈元素

			siblings() 取得匹配元素前后所有的同辈元素

			closest() 取得最近的匹配元素

			parent() 获得集合中每个匹配元素的父级元素

			parents() 获得集合中每个匹配元素的祖先元素

			closest() 从元素本身开始，逐级向上级元素匹配，并返回最先匹配的祖先元素

		CSS-DOM 操作

			css() 访问和设置匹配元素的样式属性

			height() 取得和设置匹配元素当前计算的高度值（px）

			width() 取得和设置第一个匹配元素当前计算的宽度值（px）

			innerHeight() 获取第一个匹配元素内部区域高度（包括补白、不包括边框）

			innerWidth() 获取第一个匹配元素内部区域宽度（包括补白、不包括边框）

			outerHeight() 获取第一个匹配元素外部高度（默认包括补白和边框）

			outerWidth() 获取第一个匹配元素外部宽度（默认包括补白和边框）

			offset() 获取匹配元素在当前视口的相对偏移

			position() 获取匹配元素相对父元素的偏移

			scrollTop() 获取匹配元素相对滚动条顶部的偏移

			scrollLeft() 获取匹配元素相对滚动条左侧的偏移
	
	事件和动画

		事件

			加载 DOM

				$(document).ready(function(){})

				$(function(){})

				$().ready(function(){})

				可多次使用

			事件绑定

				bind(type,[data],fn)

					data 可选参数，作为 event.data 属性值传递给事件对象的额外数据对象

					fn 用来绑定的处理函数

					type 事件类型，包括：

						blur       当元素失去焦点时

						focus      当元素获得焦点时

						load       当指定的元素（及子元素）已加载时

						resize     当调整浏览器窗口的大小时

						scroll     当用户滚动指定的元素时

						unload     当用户离开页面时

						click      触发每一个匹配元素的click事件

						dblclick   当双击元素时

						mousedown  当鼠标指针移动到元素上方，并按下鼠标按键时

						mouseup    当在元素上放松鼠标按钮时

						mousemove  当鼠标指针在指定的元素中移动时

						mouseover  当鼠标指针位于元素上方时

						mouseout   当鼠标指针从元素上移开时

						mouseenter 当鼠标指针穿过元素时

						mouseleave 当鼠标指针离开元素时

						change     当元素的值发生改变时

						select     当 textarea 或文本类型的 input 元素中的文本被选择时

						submit     当提交表单时

						keydown    当键盘或按钮被按下时

						keypress   当键盘或按钮被按下时,每插入一个字符，就会发生 keypress 事件

						keyup      当按钮被松开时

						error      当元素遇到错误（没有正确载入）时

			合成事件

				hover(enter,out) 当光标移动到元素上触发 enter 函数,当光标移出这个元素时触发 out 函数

				toggle() 对元素切换显示/隐藏

			事件冒泡

				事件对象 event

				停止事件冒泡 event.stopPropagation();

				阻止默认行为 event.preventDefault(); 或者 return false;

			事件对象的属性

				获取事件的类型 event.type

				获取到触发事件的元素 event.target

				在事件中涉及的其它任何DOM元素 event.relatedTarget

				页面的 x 坐标 event.pageX

				页面的 y 坐标 event.pageY

				鼠标单击事件中获取鼠标键位 event.which
					1 = 左键
					2 = 中键
					3 = 右键

			移除事件

				unbind()

			模拟操作

				模拟单击 trigger('click')  .click()

				触发自定义事件 trigger('自定义事件类型',[传递的数据])

		动画

			显示 show()

			隐藏 hide()

			不透明度的淡入 fadeIn()

			不透明度的淡出 fadeOut()

			通过高度由下至上延伸隐藏 slideUp()

			通过高度由上至下延伸显示 slideDown()

			自定义动画方法 animate()

			停止元素的动画 stop()

			判断是否处于动画状态 if(!$(element)).is(':animated'){  }

			延迟动画 delay()

			切换元素的可见状态 toggle()

			通过高度变化来切换可见性 slideToggle()

			以渐进方式调整元素到指定的不透明度 fadeTo()

			以不透明度变化来切换可见性 fadeToggle()
	
	对表单、表格的操作

		表单

			单行文本框应用

			多行文本框应用

			复选框应用

			下拉框应用

			表单验证

		表格

			表格变色

			表格展开关闭

			表格内容筛选
	
		其他应用

			网页字体大小

			网页选项卡

			网页换肤

	Ajax 的应用
	
	插件的使用和写法
	
	案例 jQuery 打造个性网站
	
	jQuery Mobile 移动端
	
	各个版本的变化
	
	性能优化和技巧
	
	附录A $(document).ready() 函数
	
	附录B Firebug 开发工具
	
	附录C Ajax 的 XMLHttpRequest 对象属性和方法
	
	附录D $.ajax()方法的参数
	
	附录E jQuery 加载并解析 XML

	附录F 插件 API

	附录G jQuery 速查表